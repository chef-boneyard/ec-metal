{
  "name": "hostsfile",
  "version": "2.4.4",
  "description": "Provides an LWRP for managing the /etc/hosts file",
  "long_description": "hostsfile LWRP\n==============\n[![Build Status](https://travis-ci.org/customink-webops/hostsfile.png?branch=master)](https://travis-ci.org/customink-webops/hostsfile)\n\n`hostsfile` provides an LWRP for managing your `/etc/hosts` (or Windows equivalent) file using Chef.\n\n\nRequirements\n------------\n- Chef 11 or higher\n- **Ruby 1.9.3 or higher**\n\n**Please stop opening Pull Requests to restore Ruby 1.8 support!** Any of the `1.x.y` series of this cookbook will work with Chef 10 and Ruby 1.8. You can use Opscode's [Omnibus installer](http://www.opscode.com/blog/2012/06/29/omnibus-chef-packaging/) to install Ruby 1.9+ and Seth Chisamore's [Vagrant Omnibus plugin](https://github.com/schisamo/vagrant-omnibus) to get Ruby 1.9+ on your Vagrant box.\n\n\nAttributes\n----------\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Description</th>\n    <th>Example</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td>ip_address</td>\n    <td>(name attribute) the IP address for the entry</td>\n    <td><tt>1.2.3.4</tt></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>hostname</td>\n    <td>(required) the hostname associated with the entry</td>\n    <td><tt>example.com</tt></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td>unique</td>\n    <td>remove any existing entries that have the same <tt>hostname</tt></td>\n    <td><tt>true</tt></td>\n    <td><tt>false</tt></td>\n  </tr>\n  <tr>\n    <td>aliases</td>\n    <td>array of aliases for the entry</td>\n    <td><tt>['www.example.com']</tt></td>\n    <td><tt>[]</tt></td>\n  </tr>\n  <tr>\n    <td>comment</td>\n    <td>a comment to append to the end of the entry</td>\n    <td><tt>'interal DNS server'</tt></td>\n    <td><tt>nil</tt></td>\n  </tr>\n  <tr>\n    <td>priority</td>\n    <td>the relative position of this entry</td>\n    <td><tt>20</tt></td>\n    <td>(varies, see **Priorities** section)</td>\n  </tr>\n</table>\n\n\nActions\n-------\n**Please note**: In `v0.1.2`, specifying a hostname or alias that existed in another automatically removed that hostname from the other entry before. In `v2.1.0`, the `unique` option was added to give the user case-by-case control of this behavior. For example, given an `/etc/hosts` file that contains:\n\n    1.2.3.4          example.com www.example.com\n\nwhen the Chef recipe below is converged:\n\n```ruby\nhostsfile_entry '2.3.4.5' do\n  hostname  'www.example.com'\n  unique    true\nend\n```\n\nthen the `/etc/hosts` file will look like this:\n\n    1.2.3.4          example.com\n    2.3.4.5          www.example.com\n\nNot specifying the `unique` parameter will result in duplicate hostsfile entries.\n\n#### `create`\nCreates a new hosts file entry. If an entry already exists, it will be overwritten by this one.\n\n```ruby\nhostsfile_entry '1.2.3.4' do\n  hostname  'example.com'\n  action    :create\nend\n```\n\nThis will create an entry like this:\n\n    1.2.3.4          example.com\n\n#### `create_if_missing`\nCreate a new hosts file entry, only if one does not already exist for the given IP address. If one exists, this does nothing.\n\n```ruby\nhostsfile_entry '1.2.3.4' do\n  hostname  'example.com'\n  action    :create_if_missing\nend\n```\n\n#### `append`\nAppend a hostname or alias to an existing record. If the given IP address doesn't not already exist in the hostsfile, this method behaves the same as create. Otherwise, it will append the additional hostname and aliases to the existing entry.\n\n    1.2.3.4         example.com www.example.com # Created by Chef\n\n```ruby\nhostsfile_entry '1.2.3.4' do\n  hostname  'www2.example.com'\n  aliases   ['foo.com', 'foobar.com']\n  comment   'Append by Recipe X'\n  action    :append\nend\n```\n\nwould yield:\n\n    1.2.3.4         example.com www.example.com www2.example.com foo.com foobar.com # Created by Chef, Appended by Recipe X\n\n\n#### `update`\nUpdates the given hosts file entry. Does nothing if the entry does not exist.\n\n```ruby\nhostsfile_entry '1.2.3.4' do\n  hostname  'example.com'\n  comment   'Update by Chef'\n  action    :update\nend\n```\n\nThis will create an entry like this:\n\n    1.2.3.4           example # Updated by Chef\n\n#### `remove`\nRemoves an entry from the hosts file. Does nothing if the entry does not\nexist.\n\n```ruby\nhostsfile_entry '1.2.3.4' do\n  action    :remove\nend\n```\n\nThis will remove the entry for `1.2.3.4`.\n\n\nUsage\n-----\nIf you're using [Berkshelf](http://berkshelf.com/), just add `hostsfile` to your `Berksfile`:\n\n```ruby\ncookbook 'hostsfile'\n```\n\nOtherwise, install the cookbook from the community site:\n\n    knife cookbook site install hostsfile\n\nHave any other cookbooks *depend* on hostsfile by editing editing the `metadata.rb` for your cookbook.\n\n```ruby\n# metadata.rb\ndepends 'hostsfile'\n```\n\nNote that you can specify a custom path to your hosts file in the `['hostsfile']['path']` node attribute. Otherwise, it defaults to sensible paths depending on your OS.\n\n### Testing\nIf you are using [ChefSpec](https://github.com/sethvargo/chefspec) to unit test a cookbook that implements the `hostsfile_entry` LWRP, this cookbook packages customer matchers that you can use in your unit tests:\n\n- `append_hostsfile_entry`\n- `create_hostsfile_entry`\n- `create_hostsfile_entry_if_missing`\n- `remove_hostsfile_entry`\n- `update_hostsfile_entry`\n\nFor example:\n\n```ruby\nit 'creates a hostsfile entry for the DNS server' do\n  expect(chef_run).to create_hostsfile_entry('1.2.3.4')\n    .with_hostname('dns.example.com')\nend\n```\n\nPriority\n--------\nPriority is a relatively new addition to the cookbook. It gives you the ability to (somewhat) specify the relative order of entries. By default, the priority is calculated for you as follows:\n\n1. Local, loopback\n2. IPV4\n3. IPV6\n\nHowever, you can override it using the `priority` option.\n\n\nContributing\n------------\n1. Fork the project\n2. Create a feature branch corresponding to you change\n3. Commit and test thoroughly\n4. Create a Pull Request on github\n\n\nLicense & Authors\n-----------------\n- Author:: Seth Vargo (sethvargo@gmail.com)\n\n```text\nCopyright 2012-2013, Seth Vargo\nCopyright 2012, CustomInk, LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "maintainer": "Seth Vargo",
  "maintainer_email": "sethvargo@gmail.com",
  "license": "Apache 2.0",
  "platforms": {
  },
  "dependencies": {
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
  }
}